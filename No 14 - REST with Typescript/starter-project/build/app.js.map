{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.ts","webpack:///./src/controllers/default_controller.ts","webpack:///./src/controllers/quote_controller.ts","webpack:///./src/routes.ts","webpack:///./src/services/quote_service.ts","webpack:///./src/views/default/default.ts","webpack:///./src/views/default/index.ts","webpack:///./src/views/index.ts","webpack:///external \"eshtml\"","webpack:///external \"fortjs\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Fort } from 'fortjs';\nimport { routes } from './routes';\nimport { FortViewEngine } from 'eshtml';\nimport * as path from \"path\";\n\nexport class App extends Fort {\n    constructor() {\n        super();\n        this.routes = routes;\n        this.viewEngine = FortViewEngine;\n    }\n}\n\nnew App().create({\n    defaultPath: \"default\",\n    folders: [{\n        alias: \"/\",\n        path: path.join(__dirname, \"../static\")\n    }]\n}).then(() => {\n    console.log(\"Your fort is located at address - localhost:4000\");\n})\n\n","import { Controller, DefaultWorker, htmlResult, textResult, renderView, viewResult } from \"fortjs\";\n\nexport class DefaultController extends Controller {\n    @DefaultWorker()\n    async default() {\n        try {\n            const model = {\n                title: 'FortJs'\n            }\n            const result = await viewResult('controller:default,action:default', model);\n            return result;\n        } catch (ex) {\n            console.log(ex);\n            // handle exception and show user a good message.\n            // save this ex in a file or db, so that you can know what's the issue and where\n            const result = await textResult(`Our server is busy right now. Please try later.`);\n            return result;\n        }\n    }\n}","import { Controller, DefaultWorker, jsonResult, HTTP_STATUS_CODE, HTTP_METHOD, Worker, Route } from 'fortjs'\nimport { QuoteService } from '../services/quote_service';\n\nexport class QuoteController extends Controller {\n\n    /*\n    @DefaultWorker()\n    async default() {\n        var result = {\n            \"quotes\":\n                [\n                    { \"quote\": { \"id\": 1, \"text\": \"Kontrolsüz güç güç değildir\" } },\n                    { \"quote\": { \"id\": 2, \"text\": \"Ali veli 49 50\" } },\n                    { \"quote\": { \"id\": 3, \"text\": \"Ak akçe karagün içindir\" } },\n                ]\n        };\n        return jsonResult(result, HTTP_STATUS_CODE.Ok);\n    }\n    */\n    // HTTP Post'a hizmet edecen Worker metodumuz\n    @Worker([HTTP_METHOD.Post])\n    @Route(\"/\") // adres bildirimi. Yani http://localhost:4000/quote \n    async createQuote() {\n        const service = new QuoteService(); // servisimizi oluşturduk\n        // body'den gelen alanlara bakılarak payload elde edildi\n        const payload = {\n            id:this.body.id,\n            text: this.body.text,\n            available: this.body.available,\n            owner: this.body.owner\n        }\n        // servisimizin ilgili metodunu çağırarak quote nesnesini diziye eklettik\n        const newQuote = service.createQuote(payload);\n        // geriye oluşturulan quote içeriğini(id'de barındırır) ve HTTP 201 kodunu gönderdik\n        return jsonResult(newQuote, HTTP_STATUS_CODE.Created);\n    }\n\n    // varsayılan worker'ımız HTTP Get talepleri sonrası çalışır\n    @DefaultWorker()\n    async getQuoteList() {\n        const service = new QuoteService(); // CRUD operasyonlarını üstlenen servis nesnemizi örnekledik\n        return jsonResult(service.getAllQuotes()); // Sonuçları json formatında gönderdik\n    }\n\n\n}","import { DefaultController } from \"./controllers/default_controller\";\nimport { QuoteController } from \"./controllers/quote_controller\";\n\nexport const routes = [{\n    path: \"/default\",\n    controller: DefaultController\n}, {\n    path: \"/quote\",\n    controller: QuoteController\n}];","import { Quote } from \"../models/quote\"; // modeli import ettik\n\n// Quote nesnelerinden oluşan diziyi barındıracak bir sözleşme tanımlıyoruz\ninterface ILibrary {\n    quotes: Quote[];\n}\n\nconst library: ILibrary = {\n    quotes: []\n}\n\n// Servis sınıfımız temel CRUD operasyonlarını içermekte\nexport class QuoteService {\n    // yeni bir quote nesnesi ekler\n    createQuote(quote: Quote) {\n        library.quotes.push(quote);\n        return quote;\n    }\n\n    // gelen quote bilgisine bakarak güncelleme yapar\n    updateQuote(quote: Quote) {\n        // gelen quote nesnesindeki id değerini kullanarak kaydı bul\n        const current = library.quotes.find(q => q.id === quote.id);\n        if (current != null) { //kayıt varsa alanlarını güncelle\n            current.id=quote.id;\n            current.text = quote.text;\n            current.owner = quote.owner;\n            current.available = quote.available;\n            return current;\n        }\n        else\n            return quote;\n    }\n\n    // id değerine göre silme işlemini yapar\n    deleteQuote(id:number) {\n        const currentID=library.quotes.findIndex(q=>q.id===id); // id üzerinden kaydın indeksini bul\n        library.quotes.splice(currentID,1); // index'in bulunduğu yerden itibaren 1 kayıt sil\n    }\n\n    // id değerine göre quote'ı bulur\n    getQuoteById(id: number) {\n        const current=library.quotes.find(q=>q.id===id);\n        return current;\n    }\n\n    // tüm özlü sözleri döndürür\n    getAllQuotes() {\n        return library.quotes;\n    }\n}","import {\n    View,\n    declareView\n} from \"eshtml\";\n\n// you can give any name but make sure its unique among all other views.\n@declareView('controller:default,action:default')\nexport class DefaultView extends View {\n    render(model) {\n        return `<!doctype html>\n        <html>\n        <head>\n        <title>${model.title}</title>\n        </head>\n        <body>\n        <div class=\"text-center\" style=\"margin-top:50px;\">\n        <img src=\"/fort_js_logo_200_137.png\"/>\n        <span class=\"app-name\">FortJs</span>\n        </div>\n        <div class=\"text-center\">\n        Congrats ! You Own A Fort Now.\n        </div>\n        <div class=\"text-center\" style=\"margin-top:50px;font-size:40px;\">\n        Fill up your fort with <a target=\"_blank\" href=\"http://fortjs.info/tutorial/guard/\">guards</a>, \n        <a target=\"_blank\" href=\"http://fortjs.info/tutorial/shield/\">shields</a> and \n        <a href=\"http://fortjs.info/tutorial/wall/\" target=\"_blank\">walls</a>.\n        </div>\n        <div>\n        <ul>\n        <li><i class=\"fas fa-globe\"></i> Docs - http://fortjs.info/ </li>\n        <li><i class=\"fab fa-medium-m\"></i> Medium - https://medium.com/fortjs</li>\n        </ul>\n        </div>\n        <style>\n        body{\n            background-color:#000000;\n            color:white;\n        }\n        .text-center{\n            text-align:center;\n        }\n        .app-name{\n            font-size:200px;\n        }\n        a{\n            color:#8fff35;\n        }\n        ul{\n            margin-top:100px;\n            font-size:30px;\n            text-align:center;\n            padding-left:30%;\n        }\n        ul li {\n            text-align:left;\n            padding-top:20px;   \n        }\n        </style>\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\" integrity=\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\" crossorigin=\"anonymous\">\n        </body>\n        </html>\n        `;\n    }\n}","export * from './default';","export * from './default/index';","module.exports = require(\"eshtml\");","module.exports = require(\"fortjs\");","module.exports = require(\"path\");"],"sourceRoot":""}